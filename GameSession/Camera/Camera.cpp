#include "stdafx.h"
#include "Camera.h"

#include "GameSession/Manager/InputManager.h"
#include "GameSession/Manager/RenderManager.h"
#include "GameSession/Manager/TimeManager.h"

//////////////////////////////////////////////////////////////////////////

namespace hvgs
{

//////////////////////////////////////////////////////////////////////////

CCamera::CCamera()
	: m_Position(0.0f, 0.0f)
	, m_ZoomFactor(1.0f)
{

}

//////////////////////////////////////////////////////////////////////////

CCamera::~CCamera()
{

}

//////////////////////////////////////////////////////////////////////////

void CCamera::Tick()
{
	UpdateZoom();
}

//////////////////////////////////////////////////////////////////////////

ScreenPos CCamera::WorldToScreenPoint(const WorldPos& worldPos) const
{
	Vector2 result = worldPos - m_Position;
	result *= m_ZoomFactor;

	result.y = CRenderManager::Get().GetScreenHeight() - result.y;
	return result;
}

//////////////////////////////////////////////////////////////////////////

const Vector2& CCamera::GetPosition() const
{
	return m_Position;
}

//////////////////////////////////////////////////////////////////////////

void CCamera::SetPosition(const Vector2& position)
{
	if (m_Position == position)
	{
		return;
	}

	m_Position = position;
}

//////////////////////////////////////////////////////////////////////////

void CCamera::SetPosition(Vector2&& position)
{
	if (m_Position == position)
	{
		return;
	}

	m_Position = position;
}

//////////////////////////////////////////////////////////////////////////

float CCamera::GetZoomFactor() const
{
	return m_ZoomFactor;
}

//////////////////////////////////////////////////////////////////////////

void CCamera::SetZoomFactor(float zoomFactor)
{
	m_ZoomFactor = zoomFactor;
}

//////////////////////////////////////////////////////////////////////////

void CCamera::UpdateZoom()
{
	float scrollWheelDelta = CInputManager::Get().GetMouseWheelDelta();
	if (scrollWheelDelta < 0)
	{
		m_ZoomFactor *= 0.9f;
	}
	else if (scrollWheelDelta > 0)
	{
		m_ZoomFactor /= 0.9f;
	}

}

//////////////////////////////////////////////////////////////////////////

} // hvgs
